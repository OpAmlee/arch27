[[ -f ~/.Xmodmap ]] && xmodmap ~/.Xmodmap


this was a led toggle moved to scroll lock
xmodmap -e 'add mod3 = Scroll_Lock'

brodie saying if you want to give shift powers to a
xmodmap -e 'add shift = a'

code to run from terminal 
xmodmap -e 'keycode 135 = Caps_Lock' && xmodmap -e 'keycode 66 = Escape' && xmodmap -e 'keycode 9 = BackSpace' && xmodmap -e 'keycode 78 = ' && xmodmap -e 'keycode 78 = Menu'

xmodmap -e 'keycode 135 = Caps_Lock' && xmodmap -e 'keycode 66 = ' && xmodmap -e 'keycode 78 = '&& xmodmap -e 'keycode 9 = BackSpace'  && xmodmap -e 'keycode 78 = Menu' && xmodmap -e 'keycode 66 = Escape'

key repeat
xset -r 38 example is a wont repeat
xset r 38 now it repeats like it should

to delay startup script
/bin/bash -c "sleep 20; /usr/bin/xmodmap /home/$USER/.Xmodmap"


pointer = 1 2 3 4 5 8 9 6 7 10 11




dfsSDFsdfs

sdfssdfsdsdfssdfsfsdfssdfs




this guy was setting up jkl; as arrows

clear Mod3

! make Capslock the "Mode_switch" key
clear Lock

! All Mod must be cleared
clear Mod1
clear Mod2
clear Mod3
clear Mod4
clear Mod5

! setting all the modification keys
add Mod1 = Alt_L Alt_R Meta_L
add Mod2 = Num_Lock
add Mod3 = Mode_switch
add Mod4 = Super_L Super_R Hyper_R

! Clear must be done before configuring it
keycode 31 =
keycode 44 =
keycode 45 =
keycode 46 =

! Configuration (first column normal type, second with shift and second with Mod_switch)
keycode 31 = i I Up
keycode 44 = j J Left
keycode 45 = k K Down
keycode 46 = l L Right

! Clearing the arrow keys and some functional keys like home
keycode 111 =
keycode 113 =
keycode 114 =
keycode 116 =
keycode 112 =
keycode 117 =

Edit file: sudo vim /usr/share/X11/xkb/compat/basic
final notes from this guy on keymap groups

# Add  Caps_Lock to virtual modifiers
    virtual_modifiers  NumLock,AltGr,Caps_Lock;

# change FROM:
    interpret Mode_switch {
        useModMapMods= level1;
        virtualModifier= AltGr;
        action= SetGroup(group=+1);
    };

# TO:
    interpret Mode_switch {
        useModMapMods= level1;
        virtualModifier= Caps_Lock;
        action= LockGroup(group=+1);
    };

# change from
    group 2 = AltGr;
TO:
    group 2 = Caps_Lock;