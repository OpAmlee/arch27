#+title: :starship config
#+PROPERTY: header-args :tangle ~/.config/starship/starship.toml
#+auto_tangle: t

* table of contents :toc:
- [[#layout][layout]]
- [[#battery][battery]]
- [[#character][character]]
- [[#conda][conda]]
- [[#cmd-duration][cmd duration]]
- [[#directory][directory]]
- [[#git][git]]
- [[#line-break][line break]]
- [[#python][python]]
- [[#right-prompt][right prompt]]
- [[#username][username]]

* layout

#+BEGIN_SRC sh
format = """
[‚ï≠‚îÄ‚îÄ ](fg:235)$username $directory $fill $cmd_duration $python$conda$git_branch $git_status $git_commit$battery$line_break\
[‚ï∞ ](fg:235)$character
"""
add_newline = true
# [‚îÇ](fg:235)
#+END_SRC


* battery

#+BEGIN_SRC sh
[battery]
format = "[$percentage]($style) "
#full_symbol = "ÔâÄ "
#charging_symbol = "‚ö°"

[[battery.display]] # "bold red" style and discharging_symbol when capacity is between 0% and 10%
threshold = 20
style = "bold red"
charging_symbol = "‚ö°"
discharging_symbol = "üíÄ "

[[battery.display]] # capacity is above last value listed and below next value
threshold = 30
style = "fg:202"
charging_symbol = "‚ö°"
discharging_symbol = "ÔâÉ "

[[battery.display]] # capacity is above last value listed and below next value
threshold = 60
style = "fg:11"
charging_symbol = "‚ö°"
discharging_symbol = "ÔâÇ "

[[battery.display]] # capacity is above last value listed and below next value
threshold = 75
style = "fg:41"
charging_symbol = "‚ö°"
discharging_symbol = "ÔâÅ "

[[battery.display]] # capacity is above last value listed and below 100
threshold = 100
style = "italic fg:35"
charging_symbol = "‚ö°"
discharging_symbol = "ÔâÄ "
#discharging_symbol = "üîã "
#+END_SRC



* character

#+BEGIN_SRC sh
[character]
success_symbol = "[ÓûÄ ](bold green) "
error_symbol = "[Ôãì](fg:162) "
disabled = false
#+END_SRC


* conda
#+BEGIN_SRC sh
[conda]
format = "[$symbol$environment]($style) "
symbol = "Ô††"
style = "fg:4"
#+END_SRC

* cmd duration
#+BEGIN_SRC sh
[cmd_duration]
min_time = 500
format = "[$duration](fg:172)"
#+END_SRC

* directory

#+BEGIN_SRC sh
[directory]
truncation_length = 8
style = "fg:129"
read_only = " Ôàæ"
read_only_style = "red"
#symbol = "Ôá∫ "
#+END_SRC


* git

#+BEGIN_SRC sh


[git_branch]
format = "[$symbol $branch(:$remote_branch)]($style) "
symbol = "Ôû° "
style = "italic fg:87"
truncation_length = 20
truncation_symbol = "ÔÅõ"

[git_commit]
commit_hash_length = 8
style = "bold white"

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
ahead = "‚á°${count}"
diverged = "‚áï‚á°${ahead_count}‚á£${behind_count}"
behind = "‚á£${count}"

[git_state]
cherry_pick = "[picking](bold white)"
rebase = "[rebasing](bold white)"
merge = "[merging](bold white)"
revert = "[reverting](bold white)"
disabled = false

#+END_SRC


#+RESULTS:

* line break

#+BEGIN_SRC sh
[line_break]
disabled = false
#+END_SRC

* python

#+BEGIN_SRC sh
[python]
#format = '[${symbol} ${pyenv_prefix} ${detect_folders}(${version} )(\($virtualenv\) )]($style)'
format = '[${symbol}  ${pyenv_prefix} ${detect_folders}(${version} )(\($virtualenv\) )]($style)'
symbol = "Óàµ"
style = "fg:4"

version_format = "v${minor}"

pyenv_version_name = false
pyenv_prefix = "pyenv"
python_binary = ["./venv/bin/python", "python3"]
detect_folders = ["ranger","env39","~/.pyenv","~/anaconda3/env/env39"]
detect_extensions = ["py"]
detect_files = [".python-version", "Pipfile", "__init__.py", "pyproject.toml", "requirements.txt", "setup.py", "tox.ini"]
disabled = true
#+END_SRC


* right prompt

#+BEGIN_SRC sh
[fill]
symbol = " "
style = "fg:235"
#+END_SRC

* username

#+BEGIN_SRC sh
[username]
format = "[$user]($style)"
style_user = "fg:251"
style_root = "bold #FF5B00"
show_always = false
# Hide the username. The username will only show in certain scenarios
disabled = true

#+END_SRC
